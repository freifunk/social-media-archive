---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from '../../components/BlogPost.astro';
//const allPosts = Object.values(import.meta.glob('./posts/*.md', { eager: true }));
//const allPosts = await getCollection("blog");
const { page } = Astro.props;
const pageTitle = "My Astro Learning Blog";


// 🟢 ADD: Pagination logic function
export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection("blog");
  
  // Sort posts by date (newest first) - adjust based on your date field
  const sortedPosts = allPosts.sort((a, b) => 
    new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
  );

  // Use paginate() to create pages with 2 posts each
  return paginate(sortedPosts, {
    pageSize: 2
  });
}

---

<BaseLayout pageTitle={pageTitle}>
  <h2>... and here are the posts</h2>
  <p>The first post will be an example post!</p>
  <ul>
    {
      page.data.map((post) => (
        <BlogPost url={`/posts/${post.id}/`} title={post.data.title} />
      ))
    }
  </ul>

    <!-- 🟢 ADD: Pagination Navigation (entire section is new) -->
  <nav style="display: flex; justify-content: space-between; align-items: center; margin-top: 2rem; padding-top: 1rem; border-top: 1px solid #eee;">
    <div>
      {page.url.prev ? (
        <a href={page.url.prev} style="display: inline-flex; align-items: center; gap: 0.5rem; padding: 0.75rem 1.5rem; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 0.375rem; color: #495057; text-decoration: none;">
          <span style="font-size: 1.2rem;">←</span>
          Previous
        </a>
      ) : (
        <span style="opacity: 0.5; display: inline-flex; align-items: center; gap: 0.5rem; padding: 0.75rem 1.5rem; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 0.375rem; color: #495057;">
          <span style="font-size: 1.2rem;">←</span>
          Previous
        </span>
      )}
    </div>
    
    <div style="color: #666; font-size: 0.9rem;">
      Page {page.currentPage} of {page.lastPage}
    </div>
    
    <div>
      {page.url.next ? (
        <a href={page.url.next} style="display: inline-flex; align-items: center; gap: 0.5rem; padding: 0.75rem 1.5rem; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 0.375rem; color: #495057; text-decoration: none;">
          Next
          <span style="font-size: 1.2rem;">→</span>
        </a>
      ) : (
        <span style="opacity: 0.5; display: inline-flex; align-items: center; gap: 0.5rem; padding: 0.75rem 1.5rem; background: #f8f9fa; border: 1px solid #dee2e6; border-radius: 0.375rem; color: #495057;">
          Next
          <span style="font-size: 1.2rem;">→</span>
        </span>
      )}
    </div>
  </nav>

</BaseLayout>

