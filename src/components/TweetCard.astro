---
// components/TweetCard.astro
export interface Props {
  post: {
    data: {
      tweetID: string;
      username: string;
      createdAt: string;
      likeCount: number;
      retweetCount: number;
      replyCount: number;
      quoteCount: number;
    };
    body: string;
  };
  expanded?: boolean;
}
const { post, expanded = false } = Astro.props;
const formattedDate = new Date(post.data.createdAt).toLocaleDateString();
const tweetBody = expanded ? post.body : (post.body.length > 200 ? post.body.substring(0, 200) + '...' : post.body);
---
<article class="card-border">
  <h3 class="tweet-title">
    <a href={`/tweets/${post.data.tweetID}/`} class="tweet-link">
      @{post.data.username}
    </a>
  </h3>
 
  <div class="meta">

    <span>Posted on {formattedDate}</span>
  </div>
 
  <div class="content">
    {tweetBody}
  </div>
 
  <div class="stats">
    <span><i class="fas fa-heart fa-icon heart"></i> {post.data.likeCount}</span>
    <span><i class="fas fa-retweet fa-icon retweet"></i> {post.data.retweetCount}</span>
    <span><i class="fas fa-comment fa-icon comment"></i> {post.data.replyCount}</span>
    {post.data.quoteCount > 0 && <span><i class="fas fa-quote-left fa-icon quote"></i> {post.data.quoteCount}</span>}
  </div>
 
  {!expanded && (
    <div class="actions">
      <a href={`/tweets/${post.data.tweetID}/`} class="read-more">
        Read full tweet <i class="fas fa-arrow-right fa-icon arrow"></i>
      </a>
    </div>
  )}
</article>

